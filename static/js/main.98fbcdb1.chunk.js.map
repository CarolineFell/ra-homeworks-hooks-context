{"version":3,"sources":["components/Header/Header.jsx","components/List/List.jsx","hooks/useFetchData.js","components/Details/Details.jsx","App.js","index.js"],"names":["Header","props","header","className","defaultProps","List","items","selectedID","onClick","map","o","id","key","name","useFetchData","url","useState","data","setData","loading","setLoading","error","setError","useEffect","a","fetch","response","ok","Error","statusText","json","fetchData","Details","info","user","setUser","process","JSON","stringify","avatar","details","alt","src","Object","keys","toUpperCase","slice","App","users","setUsers","selectedUserID","setSelectedUserID","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98fbcdb1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.css\";\n\nexport default function Header(props) {\n  const { header } = props;\n  return (\n    <h1 className=\"header\">{header}</h1>\n  );\n}\n\nHeader.defaultProps = {\n  header: 'List & Details'\n};\n\nHeader.propTypes = {\n  header: PropTypes.string\n};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './List.css';\n\nexport default function List({ items, selectedID, onClick }) {\n  return (\n    <ul className='list'>\n      {items.map(o =>\n        <li\n          className={((selectedID === o.id) ? 'selected' : '') + ' list-item'}\n          key={o.id}\n          onClick={() => onClick(o.id)}\n        >\n          {o.name}\n        </li>\n      )}\n    </ul>\n  )\n}\n\nList.defaultProps = {\n  items: [],\n}\n\nList.propTypes = {\n  items: PropTypes.array,\n  selectedID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func,\n}","import { useState, useEffect } from \"react\";\n\nexport default function useFetchData(url) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    return () => {};\n  }, [url]);\n\n  return [{data, loading, error}];\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useFetchData from '../../hooks/useFetchData';\nimport './Details.css';\n\nexport default function Details({ info }) {\n  const { name } = info;\n  const [user, setUser] = useState(info);\n\n  const [{data, loading, error}] = useFetchData(`${process.env.REACT_APP_USERS_URL}/${info.id}.json`);\n\n  if (data && (JSON.stringify(user) !== JSON.stringify(data))) {\n    setUser(data);\n  }\n\n  const { avatar, details } = user;\n\n  return (\n    <div className='user-details'>\n      { (!error) && <img className='user-details-avatar' alt={loading ? name : ''} src={loading ? '' : avatar}/> }\n      <div className='user-details-name'>{name}</div>\n      { (!error) && ((loading)\n        ? <div className='user-details-loading'>{'Loading user details...'}</div>\n        : details && Object.keys(details).map((o) =>\n          <div className='user-detail' key={o}>\n            {`${o[0].toUpperCase()}${o.slice(1)}: ${details[o]}`}\n          </div>\n          )\n        )\n      }\n    </div>\n  )\n}\n\nDetails.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string.isRequired,\n  }),\n}","import React, { useState } from 'react';\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport Details from './components/Details/Details';\nimport useFetchData from './hooks/useFetchData';\nimport './App.css';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [selectedUserID, setSelectedUserID] = useState(null);\n\n  const [{ data, loading }] = useFetchData(`${process.env.REACT_APP_USERS_URL}/users.json`);\n  if (data && (JSON.stringify(users) !== JSON.stringify(data))) {\n    setUsers(data);\n  }\n\n  return (\n    <div className='App'>\n      <Header />\n      <div className=\"container\">\n        { loading && <div className='details'>{'Loading the list...'}</div> }\n        <List\n          items={users}\n          selectedID={selectedUserID}\n          onClick={(id) => setSelectedUserID(id)}\n        />\n        { selectedUserID && <Details info={users.find((o) => o.id === selectedUserID)}/> }\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}